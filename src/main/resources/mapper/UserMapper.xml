<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <resultMap id="userResultMap" type="com.example.demo.domain.Users">
<!--        <constructor>-->
<!--            <idArg  column="id" javaType="int"></idArg>-->
<!--        </constructor>-->
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="passwordHash" column="password_hash"/>
        <result property="email" column="email"/>
        <result property="about_me" column="about_me"/>
        <result property="avatar_hash" column="avatar_hash"/>
        <result property="member_since" column="member_since"/>
        <result property="background" column="background"/>
        <result property="last_seen" column="last_seen"/>
        <result property="confirmed" column="confirmed"/>
        <result property="name" column="name"/>
        <result property="location" column="location"/>
        <result property="website" column="website"/>
        <result property="status" column="status"/>
        <result property="role_Id" column="role_Id"/>
        <result property="liked" column="liked"/>
        <result property="like_public" column="like_public"/>
    </resultMap>
    <insert id="insertUser"  parameterType="com.example.demo.domain.Users" useGeneratedKeys="true" keyProperty="id">
        INSERT  INTO users (id,username,password_hash,email) value (#{id},#{username},#{passwordHash},#{email})
    </insert>
    <insert id="batchInsert">
        INSERT  INTO users (id,username,password_hash,email) values
        <foreach collection="list" item="item" separator=",">(#{item.id},#{item.username},#{item.passwordHash},#{item.email})</foreach>
    </insert>
    <insert id="registerUser" parameterType="com.example.demo.domain.Users">
        insert into users(username,password_hash,email,member_since,confirmed,liked) value (#{username},#{passwordHash},#{email},#{memberSince},#{confirmed},#{liked})
    </insert>
    <select id="queryInfo" parameterType="java.lang.String" resultType="com.example.demo.domain.Users">
        select id,name,email from users where name = #{name}
    </select>
    <update id="updateUser">
        update  users
        <set>
            <if test="name!=null">name=#{name},</if>
            <if test="email!=null">email=#{email},</if>
        </set>
         <where>
             <if test="id!=null">
                 id=#{id}
             </if>
         </where>
    </update>
    <update id="updateUsers">
        update  users set name=#{name} ,email = #{email} where id=#{id}
    </update>
    <select id="queryInfoById" parameterType="string" resultType="com.example.demo.domain.Users">
        select * from users where  id = #{id};
    </select>
    <select id="getMutiUser" resultType="org.apache.catalina.User" parameterType="java.util.Map">
        select * from userinfo where id=#{id};
    </select>
    <select id="queryUser" resultType="com.example.demo.domain.Users" parameterType="map">
        select * from users
        <where>
            <if test="''!=name and null !=name">
                name=#{name}
            </if>
            <if test="''!=email and null !=email">
                and  email=#{email}
            </if>
            <if test="''!=id and null!=id">
                and id=#{id}
            </if>
        </where>
    </select>
    <select id="getUser" resultMap="userResultMap">
        select * from users where id=#{id}
    </select>
    <select id="queryUserByEmail" resultType="com.example.demo.domain.Users">
         select id,name,email from users where email=#{email}
    </select>
    <delete id="deleteUser">
        delete from userinfo where id = #{id};
    </delete>
</mapper>